<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vue on 清风竹影</title>
    <link>https://liudx1985.gitee.io/tags/vue/</link>
    <description>Recent content in vue on 清风竹影</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Jan 2024 15:37:17 +0800</lastBuildDate><atom:link href="https://liudx1985.gitee.io/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue3高阶组件技术</title>
      <link>https://liudx1985.gitee.io/post/vue3/</link>
      <pubDate>Fri, 05 Jan 2024 15:37:17 +0800</pubDate>
      
      <guid>https://liudx1985.gitee.io/post/vue3/</guid>
      <description>1.Props | Vue.js (vuejs.org) ​	父组件需要向子组件注入数据，可以使用props，类似于attrs:&amp;lt;comp label=&amp;quot;xxxx&amp;quot;&amp;gt;
 特别注意！
  props是单向从父到子数据流，如果是子组件修改父组件属性，需要用#3 event
  props在子组件是只读的，意味我们无法修改props！
   &amp;lt;script setup&amp;gt;  const props = defineProps([&amp;#39;foo&amp;#39;]) console.log(props.foo)  const props2 = defineProps({  label: {  type: String,  require: true,  },  name: {  type: String,  require: true,  }  }) &amp;lt;/script&amp;gt; 通常prop的玩法是： 1，通过父组件直接修改props绑定的变量，子组件内props自动更新界面！2、初始化给内部的原生组件，然后在原生组件事件里把prop值更新回去，所谓的v-model模式。
PS,如果我们要强行额外写入属性怎么办呢，可以利用provide\inject跨层级传输接口依赖注入 | Vue.js (vuejs.org)！:
provide(&amp;#39;currentTab&amp;#39;, currentTab) # 父组件写变量 inject(&amp;#34;currentTab&amp;#34;) # 子组件注入变量，注意，这个变量是Ref，并不位于props! 2.</description>
    </item>
    
  </channel>
</rss>
